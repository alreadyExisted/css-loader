// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`localIdentName option basic: errors 1`] = `Array []`;

exports[`localIdentName option basic: locals 1`] = `undefined`;

exports[`localIdentName option basic: module (evaluated) 1`] = `
Array [
  Array [
    1,
    ":local(.test) {
  background: red;
}

:local(._test) {
  background: blue;
}

:local(.className) {
  background: red;
}

:local(#someId) {
  background: green;
}

:local(.className .subClass) {
  color: green;
}

:local(#someId .subClass) {
  color: blue;
}

:local(.-a0-34a___f) {
  color: red;
}

:local(.m_x_\\\\@) {
  margin-left: auto !important;
  margin-right: auto !important;
}

:local(.B\\\\&W\\\\?) {
  margin-left: auto !important;
  margin-right: auto !important;
}
",
    "",
  ],
]
`;

exports[`localIdentName option basic: warnings 1`] = `Array []`;

exports[`localIdentName option should have hash: errors 1`] = `Array []`;

exports[`localIdentName option should have hash: locals 1`] = `undefined`;

exports[`localIdentName option should have hash: module (evaluated) 1`] = `
Array [
  Array [
    1,
    ":local(.test) {
  background: red;
}

:local(._test) {
  background: blue;
}

:local(.className) {
  background: red;
}

:local(#someId) {
  background: green;
}

:local(.className .subClass) {
  color: green;
}

:local(#someId .subClass) {
  color: blue;
}

:local(.-a0-34a___f) {
  color: red;
}

:local(.m_x_\\\\@) {
  margin-left: auto !important;
  margin-right: auto !important;
}

:local(.B\\\\&W\\\\?) {
  margin-left: auto !important;
  margin-right: auto !important;
}
",
    "",
  ],
]
`;

exports[`localIdentName option should have hash: warnings 1`] = `Array []`;

exports[`localIdentName option should have path naming with context: errors 1`] = `Array []`;

exports[`localIdentName option should have path naming with context: locals 1`] = `undefined`;

exports[`localIdentName option should have path naming with context: module (evaluated) 1`] = `
Array [
  Array [
    1,
    ":local(.test) {
  background: red;
}

:local(._test) {
  background: blue;
}

:local(.className) {
  background: red;
}

:local(#someId) {
  background: green;
}

:local(.className .subClass) {
  color: green;
}

:local(#someId .subClass) {
  color: blue;
}

:local(.-a0-34a___f) {
  color: red;
}

:local(.m_x_\\\\@) {
  margin-left: auto !important;
  margin-right: auto !important;
}

:local(.B\\\\&W\\\\?) {
  margin-left: auto !important;
  margin-right: auto !important;
}
",
    "",
  ],
]
`;

exports[`localIdentName option should have path naming with context: warnings 1`] = `Array []`;

exports[`localIdentName option should prefixes leading hyphen + digit with underscore: errors 1`] = `Array []`;

exports[`localIdentName option should prefixes leading hyphen + digit with underscore: locals 1`] = `undefined`;

exports[`localIdentName option should prefixes leading hyphen + digit with underscore: module (evaluated) 1`] = `
Array [
  Array [
    1,
    ":local(.test) {
  background: red;
}

:local(._test) {
  background: blue;
}

:local(.className) {
  background: red;
}

:local(#someId) {
  background: green;
}

:local(.className .subClass) {
  color: green;
}

:local(#someId .subClass) {
  color: blue;
}

:local(.-a0-34a___f) {
  color: red;
}

:local(.m_x_\\\\@) {
  margin-left: auto !important;
  margin-right: auto !important;
}

:local(.B\\\\&W\\\\?) {
  margin-left: auto !important;
  margin-right: auto !important;
}
",
    "",
  ],
]
`;

exports[`localIdentName option should prefixes leading hyphen + digit with underscore: warnings 1`] = `Array []`;

exports[`localIdentName option should prefixes two leading hyphens with underscore: errors 1`] = `Array []`;

exports[`localIdentName option should prefixes two leading hyphens with underscore: locals 1`] = `undefined`;

exports[`localIdentName option should prefixes two leading hyphens with underscore: module (evaluated) 1`] = `
Array [
  Array [
    1,
    ":local(.test) {
  background: red;
}

:local(._test) {
  background: blue;
}

:local(.className) {
  background: red;
}

:local(#someId) {
  background: green;
}

:local(.className .subClass) {
  color: green;
}

:local(#someId .subClass) {
  color: blue;
}

:local(.-a0-34a___f) {
  color: red;
}

:local(.m_x_\\\\@) {
  margin-left: auto !important;
  margin-right: auto !important;
}

:local(.B\\\\&W\\\\?) {
  margin-left: auto !important;
  margin-right: auto !important;
}
",
    "",
  ],
]
`;

exports[`localIdentName option should prefixes two leading hyphens with underscore: warnings 1`] = `Array []`;

exports[`localIdentName option should saves underscore prefix in exported class names: errors 1`] = `Array []`;

exports[`localIdentName option should saves underscore prefix in exported class names: locals 1`] = `undefined`;

exports[`localIdentName option should saves underscore prefix in exported class names: module (evaluated) 1`] = `
Array [
  Array [
    1,
    ":local(.test) {
  background: red;
}

:local(._test) {
  background: blue;
}

:local(.className) {
  background: red;
}

:local(#someId) {
  background: green;
}

:local(.className .subClass) {
  color: green;
}

:local(#someId .subClass) {
  color: blue;
}

:local(.-a0-34a___f) {
  color: red;
}

:local(.m_x_\\\\@) {
  margin-left: auto !important;
  margin-right: auto !important;
}

:local(.B\\\\&W\\\\?) {
  margin-left: auto !important;
  margin-right: auto !important;
}
",
    "",
  ],
]
`;

exports[`localIdentName option should saves underscore prefix in exported class names: warnings 1`] = `Array []`;

exports[`localIdentName option should use hash prefix: errors 1`] = `Array []`;

exports[`localIdentName option should use hash prefix: locals 1`] = `undefined`;

exports[`localIdentName option should use hash prefix: module (evaluated) 1`] = `
Array [
  Array [
    1,
    ":local(.test) {
  background: red;
}

:local(._test) {
  background: blue;
}

:local(.className) {
  background: red;
}

:local(#someId) {
  background: green;
}

:local(.className .subClass) {
  color: green;
}

:local(#someId .subClass) {
  color: blue;
}

:local(.-a0-34a___f) {
  color: red;
}

:local(.m_x_\\\\@) {
  margin-left: auto !important;
  margin-right: auto !important;
}

:local(.B\\\\&W\\\\?) {
  margin-left: auto !important;
  margin-right: auto !important;
}
",
    "",
  ],
]
`;

exports[`localIdentName option should use hash prefix: warnings 1`] = `Array []`;

exports[`localIdentName option should сorrectly replace escaped symbols in selector: errors 1`] = `Array []`;

exports[`localIdentName option should сorrectly replace escaped symbols in selector: locals 1`] = `
Object {
  "-a0-34a___f": "-a0-34a___f--2nJ5",
  "B&W?": "B&W?--1s8i",
  "_test": "_test--23te",
  "className": "className--1E8H",
  "m_x_@": "m_x_@--2G3b",
  "someId": "someId--3w7J",
  "subClass": "subClass--3lo0",
  "test": "test--NW9Y",
}
`;

exports[`localIdentName option should сorrectly replace escaped symbols in selector: module (evaluated) 1`] = `
Array [
  Array [
    1,
    ".test--NW9Y {
  background: red;
}

._test--23te {
  background: blue;
}

.className--1E8H {
  background: red;
}

#someId--3w7J {
  background: green;
}

.className--1E8H .subClass--3lo0 {
  color: green;
}

#someId--3w7J .subClass--3lo0 {
  color: blue;
}

.-a0-34a___f--2nJ5 {
  color: red;
}

.m_x_\\\\@--2G3b {
  margin-left: auto !important;
  margin-right: auto !important;
}

.B\\\\&W\\\\?--1s8i {
  margin-left: auto !important;
  margin-right: auto !important;
}
",
    "",
  ],
]
`;

exports[`localIdentName option should сorrectly replace escaped symbols in selector: warnings 1`] = `Array []`;
